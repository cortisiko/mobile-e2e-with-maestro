name: Setup Android Emulator
run-name: ${{ github.actor }} is testing setting up an emulator on GitHub Actions ðŸš€
on:
  push:
    branches:
      - '*'
jobs:
  create-emulator:
    runs-on: macos-latest
    steps:
      - name: Install JDK
        run: |
          brew install openjdk@17
          echo 'export PATH="/opt/homebrew/opt/openjdk@17/bin:$PATH"' >> $HOME/.bash_profile
          source $HOME/.bash_profile
          java -version  # Verify Java installation

      - name: Setup Android SDK
        run: |
          # Define SDK path
          export ANDROID_HOME=$HOME/Android/sdk

          # Set environment variables for SDK and tools (only once)
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "$ANDROID_HOME/emulator" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          # Create SDK directories
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME

          # Download & extract command line tools
          curl -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip
          unzip cmdline-tools.zip -d cmdline-tools
          
          # Ensure correct directory structure
          mv cmdline-tools/cmdline-tools cmdline-tools/latest || true

      - name: Accept Android SDK Licenses
        run: |
          mkdir -p $ANDROID_HOME/licenses
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_HOME/licenses/android-sdk-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $ANDROID_HOME/licenses/android-sdk-license
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> $ANDROID_HOME/licenses/android-sdk-license
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

      - name: Install Android Components
        run: |
          sdkmanager --install "platform-tools" "platforms;android-32" "emulator"
          sdkmanager --install "system-images;android-32;google_apis;arm64-v8a"
          yes | sdkmanager --licenses

      - name: Create Emulator
        run: |
          # avdmanager list device
          echo "no" | avdmanager create avd \
          --name test_device \
          --package "system-images;android-32;google_apis;arm64-v8a" \
          --device "pixel_6_pro"
          sed -i '' 's/^hw.ramSize=.*/hw.ramSize=2048/' ~/.android/avd/test_device.avd/config.ini
          sed -i '' 's/^vm.heapSize=.*/vm.heapSize=1024/' ~/.android/avd/test_device.avd/config.ini
          sed -i '' 's/^hw.cpu.cores=.*/hw.cpu.cores=6/' ~/.android/avd/test_device.avd/config.ini
          ls -la $HOME/.android/avd/

      - name: Start Emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd test_device -no-window -no-audio -gpu swiftshader_indirect -no-snapshot -no-boot-anim -verbose &
          sleep 15
          adb shell getprop sys.boot_complete
          adb shell input keyevent 82
          adb shell input touchscreen swipe 500 1000 500 500

      # - name: Verify Emulator Launch
      #   run: |
      #     echo "Waiting for emulator to start..."
      #     adb wait-for-device
      #     until [[ "$(adb shell getprop sys.boot_completed 2>/dev/null)" == "1" ]]; do
      #       echo "Emulator is still booting..."
      #       sleep 5
      #     done
      #     echo "Emulator booted!"
      #     adb shell input keyevent 82
      #     adb shell input touchscreen swipe 500 1000 500 500
      #     adb devices
